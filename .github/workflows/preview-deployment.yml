name: "Vercel Preview Deployment"

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches: [main, development]

jobs:
  task-1:
    runs-on: ubuntu-latest
    concurrency:
      group: pull-request-${{ github.ref_name }}
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install -g pnpm
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      # - name: Build Project Artifacts
      #   run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: |
          deployment_url="https://wave-research-8m1fgx0vo-waverd.vercel.app"
          deployment_hostname=${deployment_url#*://}

          # deployment_url="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"
          # intended_alias_hostname=$(echo "${{ vars.CLIENT_URL }}" | sed 's~^[a-zA-Z]*://~~')

          deployment_id=$(curl -s -G \
          -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
          "https://api.vercel.com/v6/deployments/$deployment_hostname" | jq -r '.id')


          intended_alias_hostname="$deployment_id${vars.BASE_DOMAIN}"

          echo "Deployment ID: $deployment_id"
          echo "Deployment URL: $deployment_hostname"
          echo "Intended Alias: $intended_alias_hostname"

          if [ -z "$deployment_id" ]; then
            echo "Failed to retrieve deployment ID. Exiting..."
            exit 1
          fi

          # Set Alias for the Deployment
          current_alias_hostname=$(curl -s -G \
          -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
          "https://api.vercel.com/v4/aliases/$intended_alias_hostname?projectId=$VERCEL_PROJECT_ID&teamId=$VERCEL_ORG_ID" | jq -r '.alias')

          if [[ "$current_alias_hostname" == "$intended_alias_hostname" ]]; then
            vercel alias rm $intended_alias_hostname --token=${{ secrets.VERCEL_TOKEN }} --yes
          fi

          echo "Current Alias: $current_alias_hostname"

          # Set Alias for the Deployment
          ALIAS_RESPONSE=$(curl --location --globoff \
            -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
            "https://api.vercel.com/v2/deployments/$deployment_id/aliases?teamId=${{ secrets.VERCEL_ORG_ID }}" \
            --header "Content-Type: application/json" \
            --data "{\"alias\": \"$intended_alias_hostname\"}")

          echo "Alias Response: $ALIAS_RESPONSE"

          # Verify Alias Set
          if echo "$ALIAS_RESPONSE" | grep -q '"error"'; then
            echo "Failed to set alias. Response: $ALIAS_RESPONSE"
            exit 1
          fi

          echo "Alias set successfully for deployment: $deployment_id"
