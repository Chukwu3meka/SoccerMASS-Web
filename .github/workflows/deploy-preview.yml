name: Vercel Preview
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - development
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install -g pnpm
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        # run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        run: |
          deployment_url="$(vercel deploy --prebuilt --token=$VERCEL_TOKEN)"
          deployment_hostname=${deployment_url#*://}
          preview_domain="preview.waverd.com"

          deployment_id=$(curl -s -G \
            -H "Authorization: Bearer $VERCEL_TOKEN" \
            "https://api.vercel.com/v6/deployments/$deployment_hostname" | jq -r '.id')

          if [ -z "$deployment_id" ]; then
            echo "Failed to retrieve deployment ID. Exiting..."
            exit 1
          fi

          ALIAS_RESPONSE=$(curl --location --globoff \
            -H "Authorization: Bearer $VERCEL_TOKEN" \
            "https://api.vercel.com/v2/deployments/$deployment_id/aliases?teamId=$VERCEL_ORG_ID" \
            --header "Content-Type: application/json" \
            --data "{\"alias\": \"$preview_domain\"}")
