name: "Run Playwright Tests"

env:
  BASE_DOMAIN: ${{ vars.BASE_DOMAIN }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches: [main, development]

jobs:
  preview-deployment:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    # outputs:
    #   PREVIEW_URL1: ${{ steps.set-preview-url.outputs.PREVIEW_URL1 }}
    steps:
      - uses: actions/checkout@v4
        # - name: Install dependencies
        #   run: npm install -g pnpm
        # - name: Install Vercel CLI
        #   run: npm install --global vercel@latest
        # - name: Pull Vercel Environment Information
        #   run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        # # - name: Build Project Artifacts
        # #   run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        # - id: get-url
        #   name: Deploy Project Artifacts to Vercel
        #   run: |
        #     # deployment_url="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"
        #     deployment_url="https://wave-research-8m1fgx0vo-waverd.vercel.app"
        #     deployment_hostname=${deployment_url#*://}
        #     deployment_url_ref=$(echo "$deployment_url" | awk -F'-' '{print $3}')
        #     # intended_alias_hostname=$(echo "${{ vars.SERVER_URL }}" | sed 's~^[a-zA-Z]*://~~') # remove https
        #     intended_alias_hostname="${deployment_url_ref}${BASE_DOMAIN}"

        #     deployment_id=$(curl -s -G \
        #       -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
        #       "https://api.vercel.com/v6/deployments/$deployment_hostname" | jq -r '.id')

        #     echo "Deployment ID: $deployment_id"
        #     echo "Deployment URL: $deployment_hostname"
        #     echo "Deployment URL Ref: $deployment_url_ref"
        #     echo "Intended Alias: $intended_alias_hostname"

        #     if [ -z "$deployment_id" ]; then
        #       echo "Failed to retrieve deployment ID. Exiting..."
        #       exit 1
        #     fi

        #     current_alias_hostname=$(curl -s -G \
        #       -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
        #       "https://api.vercel.com/v4/aliases/$intended_alias_hostname?projectId=$VERCEL_PROJECT_ID&teamId=$VERCEL_ORG_ID" | jq -r '.alias')

        #     if [[ "$current_alias_hostname" == "$intended_alias_hostname" ]]; then
        #       vercel alias rm $intended_alias_hostname --token=${{ secrets.VERCEL_TOKEN }} --yes
        #     fi

        #     echo "Current Alias: $current_alias_hostname"

        #     ALIAS_RESPONSE=$(curl --location --globoff \
        #       -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
        #       "https://api.vercel.com/v2/deployments/$deployment_id/aliases?teamId=${{ secrets.VERCEL_ORG_ID }}" \
        #       --header "Content-Type: application/json" \
        #       --data "{\"alias\": \"$intended_alias_hostname\"}")

        #     echo "Alias Response: $ALIAS_RESPONSE"

        #     # Verify Alias Set
        #     if echo "$ALIAS_RESPONSE" | grep -q '"error"'; then
        #       echo "Failed to set alias. Response: $ALIAS_RESPONSE"
        #       exit 1
        #     fi

        #     echo "Alias set successfully for deployment: $deployment_id"
        #     echo "PREVIEW_URL=$intended_alias_hostname" >> $GITHUB_ENV

      - id: set-preview-url
        run: |
          echo "VERCEL_TOKEN: $VERCEL_TOKEN"
          intended_alias_hostname="8m1fgx0vo.waverd.com"
          preview_url="https://${intended_alias_hostname}"
          echo "Preview URL: $preview_url"
          # echo "{preview}={$preview_url}" >> $GITHUB_OUTPUT
          # echo "PREVIEW_URL1=$preview_url" >> $GITHUB_ENV
          # - name: Save URL to artifact
          echo "$preview_url" > preview_url.txt
      - uses: actions/upload-artifact@v4
        with:
          name: preview-url
          path: preview_url.txt
      # - id: get-env
      #   run: |
      #     echo "The value of PREVIEW_URL is $PREVIEW_URL1"
      #     # echo "The value of PREVIEW_URL is $preview_url"

  playwright-tests:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: preview-deployment
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: preview-url
      - name: Load URL
        run: echo "PREVIEW_URL=$(cat preview_url.txt)" >> $GITHUB_ENV

      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: lts/*
      # - name: Install dependencies
      #   run: npm install -g pnpm && pnpm install
      # - name: Install Playwright Browsers
      #   # run: pnpm exec playwright install --with-deps
      #   run: npx playwright install --with-deps chromium
      - name: Run test #Wait for deployment to complete and run Playwright tests
        env:
          NODE_ENV: preview
        run: |
          echo "PREVIEW_URL: $PREVIEW_URL"
          # npx wait-on https://$PREVIEW_URL && PREVIEW_URL=https://$PREVIEW_URL npx playwright test

      # - uses: actions/upload-artifact@v4
      #   if: ${{ !cancelled() }}
      #   with:
      #     name: playwright-report
      #     path: playwright-report/
      #     retention-days: 30

  post-playwright-tests:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    needs: playwright-tests
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: preview-url
      - name: Load URL
        run: echo "PREVIEW_URL=$(cat preview_url.txt)" >> $GITHUB_ENV
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        # run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        run: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
      - name: Delete Vercel Domain Alias
        run: |
          echo "Alias to be deleted is $PREVIEW_URL"
          # vercel alias rm $PREVIEW_URL --token=${{ secrets.VERCEL_TOKEN }} --yes
          vercel alias rm $PREVIEW_URL --token=$VERCEL_TOKEN --yes
