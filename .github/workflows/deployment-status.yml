name: Wait for Vercel Deployment

on:
  pull_request:
    branches:
      - development

jobs:
  wait_for_vercel:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: Trigger Build
        run: npm run build

      - name: Get Deployment Status
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} # Add your Vercel token to GitHub Secrets
          VERCEL_PROJECT: wave-research # Replace with your project name
        run: |
          echo "Waiting for Vercel deployment to complete..."
          DEPLOYMENT_URL=""
          for i in {1..30}; do
            RESPONSE=$(curl -s -G \
              -H "Authorization: Bearer $VERCEL_TOKEN" \
              "https://api.vercel.com/v13/deployments" \
              --data-urlencode "projectId=$VERCEL_PROJECT" \
              --data-urlencode "limit=1")

            STATUS=$(echo $RESPONSE | jq -r '.deployments[0].state')
            DEPLOYMENT_URL=$(echo $RESPONSE | jq -r '.deployments[0].url')

            if [ "$STATUS" == "READY" ]; then
              echo "Deployment is ready at: https://$DEPLOYMENT_URL"
              echo "DEPLOYMENT_URL=https://$DEPLOYMENT_URL" >> $GITHUB_ENV
              break
            elif [ "$STATUS" == "ERROR" ]; then
              echo "Deployment failed. Exiting..."
              exit 1
            else
              echo "Deployment status: $STATUS. Retrying in 10 seconds..."
              sleep 10
            fi
          done

          if [ -z "$DEPLOYMENT_URL" ]; then
            echo "Deployment did not complete within the timeout period."
            exit 1
          fi

      # - name: Run Playwright Tests
      #   run: |
      #     echo "Running Playwright tests against deployment URL: $DEPLOYMENT_URL"
      #     npx playwright test --baseURL=$DEPLOYMENT_URL
